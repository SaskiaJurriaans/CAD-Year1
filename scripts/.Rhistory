plot(plot_davies_speed)
# Extract fitted values and predictors
fitted_values_davies_brm13 <- fitted(davies_brm13_t6_concrete, summary = FALSE)
predicted_data_davies_brm13 <- data.frame(
sedconcrete_t5 = davies_t5$sedconcrete_t5,
Spp = davies_t5$Spp,
Fitted = apply(fitted_values_davies_brm13, 2, mean),
Lower = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.975)) )
# Combine the new species data with the original predicted data
predicted_data_davies_brm13 <- rbind(predicted_data_davies_brm13, davies_brm11)
# Extract fitted values and predictors
fitted_values_davies_brm13 <- fitted(davies_brm13_t6_concrete, summary = FALSE)
predicted_data_davies_brm13 <- data.frame(
sedconcrete_t5 = davies_t5$sedconcrete_t5,
Spp = davies_t5$Spp,
Fitted = apply(fitted_values_davies_brm13, 2, mean),
Lower = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.975)) )
# Combine the new species data with the original predicted data
predicted_data_davies_brm13 <- rbind(predicted_data_davies_brm13, davies_brm13)
# Extract fitted values and predictors
fitted_values_davies_brm12 <- fitted(davies_brm12_t6_turf, summary = FALSE)
predicted_data_davies_brm12 <- data.frame(
sedturf_t5 = davies_t5$sedturf_t5,
Spp = davies_t5$Spp,
Fitted = apply(fitted_values_davies_brm12, 2, mean),
Lower = apply(fitted_values_davies_brm12, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_davies_brm12, 2, function(x) quantile(x, 0.975)) )
# Combine the new species data with the original predicted data
predicted_data_davies_brm12 <- rbind(predicted_data_davies_brm12, davies_brm12)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedturf_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_davies_brm12, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm12, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
# Extract fitted values and predictors
fitted_values_davies_brm13 <- fitted(davies_brm13_t6_concrete, summary = FALSE)
predicted_data_davies_brm13 <- data.frame(
sedconcrete_t5 = davies_t5$sedconcrete_t5,
Spp = davies_t5$Spp,
Fitted = apply(fitted_values_davies_brm13, 2, mean),
Lower = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_davies_brm13, 2, function(x) quantile(x, 0.975)) )
# Combine the new species data with the original predicted data
predicted_data_davies_brm13 <- rbind(predicted_data_davies_brm13, davies_brm13)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedconcrete_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedturf_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_davies_brm12, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm12, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedconcrete_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.02, height = 0) +
geom_errorbar(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedconcrete_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.02, height = 0) +
geom_errorbar(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedturf_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_davies_brm12, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm12, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedturf_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_davies_brm12, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm12, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = median_speed, y = SurvDev, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_davies_brm11, aes(x = median_speed, ymin = Lower, ymax = Upper), color = "black", width = 0.005, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm11, aes(x = median_speed, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_speed <- ggplot() +
geom_jitter(data = davies_combined, aes(x = median_speed, y = SurvDev, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_davies_brm11, aes(x = median_speed, ymin = Lower, ymax = Upper), color = "black", width = 0.0025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm11, aes(x = median_speed, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_speed)
plot_davies_wave <- ggplot() +
geom_jitter(data = davies_combined, aes(x = WaveEnergyLevel, y = SurvDev, color = Spp), alpha = 0.5, width = 0.1, height = 0) +
geom_errorbar(data = predicted_data_davies_brm9, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper), color = "black", width = 0.1, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm9, aes(x = WaveEnergyLevel, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_wave)
plot_davies_Ub <- ggplot() +
geom_jitter(data = davies_combined, aes(x = Ub_avrg, y = SurvDev, color = Spp), alpha = 0.5, width = 0.008, height = 0) +
geom_errorbar(data = predicted_data_davies_brm10, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm10, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_Ub)
plot_davies_Ub <- ggplot() +
geom_jitter(data = davies_combined, aes(x = Ub_avrg, y = SurvDev, color = Spp), alpha = 0.5, width = 0.008, height = 0) +
geom_errorbar(data = predicted_data_davies_brm10, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm10, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_Ub)
plot_davies_Ub <- ggplot() +
geom_jitter(data = davies_combined, aes(x = Ub_avrg, y = SurvDev, color = Spp), alpha = 0.5, width = 0.01, height = 0) +
geom_errorbar(data = predicted_data_davies_brm10, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm10, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_Ub)
plot_davies_Ub <- ggplot() +
geom_jitter(data = davies_combined, aes(x = Ub_avrg, y = SurvDev, color = Spp), alpha = 0.5, width = 0.05, height = 0) +
geom_errorbar(data = predicted_data_davies_brm10, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm10, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_Ub)
plot_davies_turf <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedturf_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_davies_brm12, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.025, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm12, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_turf)
plot_davies_concrete <- ggplot() +
geom_jitter(data = davies_combined, aes(x = sedconcrete_t5, y = SurvDev, color = Spp), alpha = 0.5, width = 0.02, height = 0) +
geom_errorbar(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_davies_brm13, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(color = "Species", fill = "Species") +
scale_color_manual(values = c("A. hyacinthus" = "orange", "A. tenuis" = "purple", "A. millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, linewidth = 0.5),
axis.ticks = element_line(color = "black", linewidth = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
# Plot the graph
plot(plot_davies_concrete)
ggsave("output/figures growth/Davies Survival Probability Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
ggsave("output/figures growth/Davies Survival Probability WaveEnergyLevel.jpeg", plot_davies_WaveEnergyLevel, width = 10, height = 6)
ggsave("output/figures survival/Davies Survival Probability Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
file.exists("/output")
file.exists("/scripts")
file.exists("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Year1")
file.exists("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Year1/scripts")
file.exists("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Year1/scripts/output")
ggsave("output/figures survival/Davies Survival Probability Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
ggsave("output/figures survival/Davies Survival Probability WaveEnergyLevel.jpeg", plot_davies_wave, width = 10, height = 6)
ggsave("output/figures survival/Davies Survival Probability Median Speed.jpeg", plot_davies_speed, width = 10, height = 6)
ggsave("output/figures survival/Davies Survival Probability Turf.jpeg", plot_davies_turf, width = 10, height = 6)
ggsave("output/figures survival/Davies Survival Probability Concrete.jpeg", plot_davies_concrete, width = 10, height = 6)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Year1")
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
library(tidyverse)  #for data wrangling etc
library(rstanarm)   #for fitting models in STAN
#library(cmdstanr)   #for cmdstan --> does not work on AIMS computers
library(brms)       #for fitting models in STAN
library(standist)   #for exploring distributions
library(coda)       #for diagnostics
library(bayesplot)  #for diagnostics
library(ggmcmc)     #for MCMC diagnostics
library(DHARMa)     #for residual diagnostics
library(rstan)      #for interfacing with STAN
library(emmeans)    #for marginal means etc
library(broom)      #for tidying outputs
library(tidybayes)  #for more tidying outputs
library(HDInterval) #for HPD intervals
library(ggeffects)  #for partial plots
library(broom.mixed)#for summarising models
library(posterior)  #for posterior draws
library(ggeffects)  #for partial effects plots
library(patchwork)  #for multi-panel figures
library(bayestestR) #for ROPE
library(see)        #for some plots
library(readxl)     #to load excel documents
library(easystats)     #framework for stats, modelling and visualisation
#library(INLA)       #for approximate Bayes
library(openxlsx)    # to write excel documents
#library(INLAutils)  #for additional INLA outputs
theme_set(theme_grey()) #put the default ggplot theme back
source('helperFunctions.R')
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="")
file.exists("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Year1/scripts/output")
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
library(tidyverse)  #for data wrangling etc
library(rstanarm)   #for fitting models in STAN
#library(cmdstanr)   #for cmdstan --> does not work on AIMS computers
library(brms)       #for fitting models in STAN
library(standist)   #for exploring distributions
library(coda)       #for diagnostics
library(bayesplot)  #for diagnostics
library(ggmcmc)     #for MCMC diagnostics
library(DHARMa)     #for residual diagnostics
library(rstan)      #for interfacing with STAN
library(emmeans)    #for marginal means etc
library(broom)      #for tidying outputs
library(tidybayes)  #for more tidying outputs
library(HDInterval) #for HPD intervals
library(ggeffects)  #for partial plots
library(broom.mixed)#for summarising models
library(posterior)  #for posterior draws
library(ggeffects)  #for partial effects plots
library(patchwork)  #for multi-panel figures
library(bayestestR) #for ROPE
library(see)        #for some plots
library(readxl)     #to load excel documents
library(easystats)     #framework for stats, modelling and visualisation
#library(INLA)       #for approximate Bayes
library(openxlsx)    # to write excel documents
#library(INLAutils)  #for additional INLA outputs
theme_set(theme_grey()) #put the default ggplot theme back
source('helperFunctions.R')
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="")
glimpse(survival)
head(survival)
str(survival)
survival |> datawizard::data_codebook()
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID))
moore_surv_t6 <- survival |> filter (Reef == "Moore",
Census == "t6",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
moore_surv <- survival |> filter (Reef == "Moore",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
moore_t5 <- merge(moore_env, moore_surv_t6, by = c("Reef", "Site", "ReefDev"), all = TRUE)
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
#free up space
remove(moore_surv, moore_env)
# Remove rows with missing values
moore_t5$SurvDev <- as.numeric(moore_t5$SurvDev)
moore_t5 <- moore_t5[complete.cases(moore_t5$SurvDev),  ]
moore_t5 <- moore_t5[complete.cases(moore_t5$PC1),  ]
moore_t5 <- moore_t5 |> select(-c(sedturf_t2, sedconcrete_t2))
# Remove rows with missing values
moore$SurvDev <- as.numeric(moore$SurvDev)
moore <- moore[complete.cases(moore$SurvDev),  ]
moore <- moore[complete.cases(moore$PC1),  ]
moore <- moore |> select(-c(sedturf_t2, sedconcrete_t2))
library(lme4)
moore_t5$Site <- as.factor(moore_t5$Site)
moore_t5$ReefDev<- as.factor(moore_t5$ReefDev)
moore$Site <- as.factor(moore$Site)
moore$ReefDev<- as.factor(moore$ReefDev)
moore_glmer1<- glmer(SurvDev ~ (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit")) #allowing for random intercepts but not random slopes --> accounting for potential variability in survival beteeen different sites and devices, but assuming that the effect of device on  survival is constant across different sites.
moore_glmer2<- glmer(SurvDev ~ Ub_avrg + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer3<- glmer(SurvDev ~ WaveEnergyLevel + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer4<- glmer(SurvDev ~ median_speed + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer5<- glmer(SurvDev ~ sedturf_t5 + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
summary(moore_glmer1)
summary(moore_glmer2)
summary(moore_glmer3)
summary(moore_glmer4)
summary(moore_glmer5)
AIC(moore_glmer1, moore_glmer2, moore_glmer3, moore_glmer4, moore_glmer5)
AIC(moore_glmer1a,moore_glmer1b, moore_glmer2, moore_glmer3, moore_glmer4, moore_glmer5)
library(lme4)
moore_t5$Site <- as.factor(moore_t5$Site)
moore_t5$ReefDev<- as.factor(moore_t5$ReefDev)
moore$Site <- as.factor(moore$Site)
moore$ReefDev<- as.factor(moore$ReefDev)
moore_glmer1a<- glmer(SurvDev ~ (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit")) #allowing for random intercepts but not random slopes --> accounting for potential variability in survival beteeen different sites and devices, but assuming that the effect of device on  survival is constant across different sites.
moore_glmer1b<- glmer(SurvDev ~ (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer2<- glmer(SurvDev ~ Ub_avrg + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer3<- glmer(SurvDev ~ WaveEnergyLevel + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer4<- glmer(SurvDev ~ median_speed + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer5<- glmer(SurvDev ~ sedturf_t5 + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
summary(moore_glmer1)
summary(moore_glmer2)
summary(moore_glmer3)
summary(moore_glmer4)
summary(moore_glmer5)
AIC(moore_glmer1a,moore_glmer1b, moore_glmer2, moore_glmer3, moore_glmer4, moore_glmer5)
library(lme4)
moore_t5$Site <- as.factor(moore_t5$Site)
moore_t5$ReefDev<- as.factor(moore_t5$ReefDev)
moore$Site <- as.factor(moore$Site)
moore$ReefDev<- as.factor(moore$ReefDev)
moore_glmer1a<- glmer(SurvDev ~ (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit")) #allowing for random intercepts but not random slopes --> accounting for potential variability in survival beteeen different sites and devices, but assuming that the effect of device on  survival is constant across different sites.
moore_glmer1b<- glmer(SurvDev ~ (1|Site), data=moore_t5, family = binomial(link = "logit"))
moore_glmer2<- glmer(SurvDev ~ Ub_avrg + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer3<- glmer(SurvDev ~ WaveEnergyLevel + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer4<- glmer(SurvDev ~ median_speed + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer5<- glmer(SurvDev ~ sedturf_t5 + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
summary(moore_glmer1)
summary(moore_glmer2)
summary(moore_glmer3)
summary(moore_glmer4)
summary(moore_glmer5)
AIC(moore_glmer1a,moore_glmer1b, moore_glmer2, moore_glmer3, moore_glmer4, moore_glmer5)
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.022, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.002, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.005, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
