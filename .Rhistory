position,
"bottom" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)
),
"right" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)
)
)
grid.newpage()
grid.draw(combined)
# return gtable invisibly
invisible(combined)
}
grid_arrange_shared_legend(plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3)
grid_arrange_shared_legend <-
function(...,
ncol = length(list(...)),
nrow = 1,
position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
g <-
ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x)
x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
gl <- lapply(plots, function(x)
x + theme(legend.position = "none"))
gl <- c(gl, ncol = ncol, nrow = nrow)
combined <- switch(
position,
"bottom" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)
),
"right" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)
)
)
grid.newpage()
grid.draw(combined)
# return gtable invisibly
invisible(combined)
}
grid_arrange_shared_legend(plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3,
top = "Title of the page",
bottom = textGrob(
"this footnote is right-justified",
gp = gpar(fontface = 3, fontsize = 9),
hjust = 1,
x = 1  ))
gc()
gc()
# Create the plot with points, error bars, and raw data
plot_moore_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.5, width = 0.1, height = 0) +
geom_errorbar(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper), color = "black", width = 0.1, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, y = Fitted), color = "black") +
labs(
title = "Nominal Wave Energy Level",
x = "Wave Energy Level",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") ,
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()  # Remove y-axis title
)
plot(plot_moore_WaveEnergyLevel)
# Create the plot with points, error bars, and raw data
plot_moore_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.5, width = 0.1, height = 0) +
geom_errorbar(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper), color = "black", width = 0.1, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, y = Fitted), color = "black") +
labs(
title = "Nominal Wave Energy Level",
x = "Wave Energy Level",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") ,
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank(),  # Remove y-axis title
plot.title = element_text(hjust = 0.5) # Center the plot title
)
plot(plot_moore_WaveEnergyLevel)
# Create the plot with points, error bars, and raw data
plot_moore_Ub<- ggplot() +
geom_jitter(data = moore_combined, aes(x = Ub_avrg, y = Size_log, color = Spp), alpha = 0.5, width = 0.008, height = 0) +
geom_errorbar(data = predicted_data_moore_brm2, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm2, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(
title = "Bottom stress",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank(),  # Remove y-axis title
plot.title = element_text(hjust = 0.5) # Center the plot title
)
plot(plot_moore_Ub)
plot_moore_speed<- ggplot() +
geom_jitter(data = moore_combined, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_moore_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper), color = "black", width = 0.0025, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm3, aes(x = median_speed, y = Fitted), color = "black") +
labs(
title = "Median flow velocity",
x = "Median flow velocity (m/s)",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") ,
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank(),  # Remove y-axis title
plot.title = element_text(hjust = 0.5) # Center the plot title
)
plot(plot_moore_speed)
# Create the plot with points, error bars, and raw data
plot_moore_turf <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = sedturf_t5, y = Size_log, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_moore_brm4, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.08, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm4, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(
title = "Sedimentation on turf",
x = "Sedimentation on turf (mg cm-2",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank(),  # Remove y-axis title
plot.title = element_text(hjust = 0.5)
)
plot(plot_moore_turf)
plot_moore_concrete <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = sedconcrete_t5, y = Size_log, color = Spp), alpha = 0.5, width = 0.02, height = 0) +
geom_errorbar(data = predicted_data_moore_brm5, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm5, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(
title = "Sedimentation on concrete",
x = "Sedimentation on concrete (mg cm-2",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank() , # Remove y-axis title
plot.title = element_text(hjust = 0.5)
)
plot(plot_moore_concrete)
grid_arrange_shared_legend <-
function(...,
ncol = length(list(...)),
nrow = 1,
position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
g <-
ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x)
x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
gl <- lapply(plots, function(x)
x + theme(legend.position = "none"))
gl <- c(gl, ncol = ncol, nrow = nrow)
combined <- switch(
position,
"bottom" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)
),
"right" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)
)
)
grid.newpage()
grid.draw(combined)
# return gtable invisibly
invisible(combined)
}
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3,
top = "Title of the page",
bottom = textGrob(
"this footnote is right-justified",
gp = gpar(fontface = 3, fontsize = 9),
hjust = 1,
x = 1  ))
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3,
top = "Title of the page",
bottom = textGrob(
"this footnote is right-justified",
gp = gpar(fontface = 3, fontsize = 5),
hjust = 1,
x = 1  ))
# Create the plot with points, error bars, and raw data
plot_moore_Ub<- ggplot() +
geom_jitter(data = moore_combined, aes(x = Ub_avrg, y = Size_log, color = Spp), alpha = 0.5, width = 0.008, height = 0) +
geom_errorbar(data = predicted_data_moore_brm2, aes(x = Ub_avrg, ymin = Lower, ymax = Upper), color = "black", width = 0.01, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm2, aes(x = Ub_avrg, y = Fitted), color = "black") +
labs(
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()
)
plot(plot_moore_Ub)
plot_moore_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.5, width = 0.1, height = 0) +
geom_errorbar(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper), color = "black", width = 0.1, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm1, aes(x = WaveEnergyLevel, y = Fitted), color = "black") +
labs(
x = "Wave Energy Level",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") ,
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()  # Remove y-axis title
)
plot(plot_moore_WaveEnergyLevel)
# Create the plot with points, error bars, and raw data
plot_moore_speed<- ggplot() +
geom_jitter(data = moore_combined, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.5, width = 0.0025, height = 0) +
geom_errorbar(data = predicted_data_moore_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper), color = "black", width = 0.0025, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm3, aes(x = median_speed, y = Fitted), color = "black") +
labs(
x = "Median flow velocity (m/s)",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") ,
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()  # Remove y-axis title
)
plot(plot_moore_speed)
plot_moore_turf <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = sedturf_t5, y = Size_log, color = Spp), alpha = 0.5, width = 0.08, height = 0) +
geom_errorbar(data = predicted_data_moore_brm4, aes(x = sedturf_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.08, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm4, aes(x = sedturf_t5, y = Fitted), color = "black") +
labs(
x = "Sedimentation on turf (mg cm-2",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()  # Remove y-axis title
)
plot(plot_moore_turf)
# Create the plot with points, error bars, and raw data
plot_moore_concrete <- ggplot() +
# Plot the raw data points, colored in green
geom_jitter(data = moore_combined, aes(x = sedconcrete_t5, y = Size_log, color = Spp), alpha = 0.5, width = 0.02, height = 0) +
geom_errorbar(data = predicted_data_moore_brm5, aes(x = sedconcrete_t5, ymin = Lower, ymax = Upper), color = "black", width = 0.05, alpha = 0.5) +
geom_point(data = predicted_data_moore_brm5, aes(x = sedconcrete_t5, y = Fitted), color = "black") +
labs(
x = "Sedimentation on concrete (mg cm-2",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple", "A_millepora" = "green")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm"),
axis.title.x = element_blank(), # Remove x-axis title
axis.title.y = element_blank()  # Remove y-axis title
)
plot(plot_moore_concrete)
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3)
{r}
# Row labels
row1_label <- textGrob("Moore Reef", rot = 90, gp = gpar(fontsize = 15))
row2_label <- textGrob("Davies Reef", rot = 90, gp = gpar(fontsize = 15))
row3_label <- textGrob("Heron Reef", rot = 90, gp = gpar(fontsize = 15))
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3)
grid.arrange(
arrangeGrob(
row1_label, arrangeGrob(
plot_moore_WaveEnergyLevel, plot_moore_Ub, plot_moore_speed, plot_moore_turf, plot_moore_concrete,
ncol = 5
),
row2_label, arrangeGrob(
plot_davies_WaveEnergyLevel, plot_davies_Ub, plot_davies_speed, plot_davies_turf2, plot_davies_concrete2,
ncol = 5
),
row3_label, arrangeGrob(
plot_heron_WaveEnergyLevel, plot_heron_Ub, plot_heron_speed, plot_heron_turf, plot_heron_concrete,
ncol = 5
),
ncol = 2, widths = c(1, 10)
)
)
library(ggplot2)
library(gridExtra)
library(grid)
grid_arrange_shared_legend <- function(..., ncol = length(list(...)), nrow = 1, position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
# Extract legend
g <- ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
# Remove legends from plots
gl <- lapply(plots, function(x) x + theme(legend.position = "none"))
# Define row labels
row_labels <- list(
textGrob("Moore", rot = 90, gp = gpar(fontsize = 15)),
textGrob("Davies", rot = 90, gp = gpar(fontsize = 15)),
textGrob("Heron", rot = 90, gp = gpar(fontsize = 15))
)
# Arrange plots with row labels
arranged_plots <- mapply(function(label, row_plots) {
arrangeGrob(
label,
arrangeGrob(grobs = row_plots, ncol = ncol),
ncol = 2,
widths = c(unit(1, "npc") * 0.1, unit(1, "npc") * 0.9)
)
}, row_labels, split(gl, rep(1:nrow, each = ncol)), SIMPLIFY = FALSE)
combined_plots <- arrangeGrob(grobs = arranged_plots, ncol = 1)
combined <- switch(
position,
"bottom" = arrangeGrob(
combined_plots,
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)
),
"right" = arrangeGrob(
combined_plots,
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)
)
)
grid.newpage()
grid.draw(combined)
invisible(combined)
}
# Define your plots
plot_moore_WaveEnergyLevel <- ggplot() + ggtitle("Moore Wave Energy Level")
plot_moore_Ub <- ggplot() + ggtitle("Moore Ub")
plot_moore_speed <- ggplot() + ggtitle("Moore Speed")
plot_moore_turf <- ggplot() + ggtitle("Moore Turf")
plot_moore_concrete <- ggplot() + ggtitle("Moore Concrete")
plot_davies_WaveEnergyLevel <- ggplot() + ggtitle("Davies Wave Energy Level")
plot_davies_Ub <- ggplot() + ggtitle("Davies Ub")
plot_davies_speed <- ggplot() + ggtitle("Davies Speed")
plot_davies_turf2 <- ggplot() + ggtitle("Davies Turf2")
plot_davies_concrete2 <- ggplot() + ggtitle("Davies Concrete2")
plot_heron_WaveEnergyLevel <- ggplot() + ggtitle("Heron Wave Energy Level")
plot_heron_Ub <- ggplot() + ggtitle("Heron Ub")
plot_heron_speed <- ggplot() + ggtitle("Heron Speed")
plot_heron_turf <- ggplot() + ggtitle("Heron Turf")
plot_heron_concrete <- ggplot() + ggtitle("Heron Concrete")
# Call the function with your plots
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel, plot_moore_Ub, plot_moore_speed, plot_moore_turf, plot_moore_concrete,
plot_davies_WaveEnergyLevel, plot_davies_Ub, plot_davies_speed, plot_davies_turf2, plot_davies_concrete2,
plot_heron_WaveEnergyLevel, plot_heron_Ub, plot_heron_speed, plot_heron_turf, plot_heron_concrete,
ncol = 5,
nrow = 3,
position = "bottom"
)
grid_arrange_shared_legend <-
function(...,
ncol = length(list(...)),
nrow = 1,
position = c("bottom", "right")) {
plots <- list(...)
position <- match.arg(position)
g <-
ggplotGrob(plots[[1]] + theme(legend.position = position))$grobs
legend <- g[[which(sapply(g, function(x)
x$name) == "guide-box")]]
lheight <- sum(legend$height)
lwidth <- sum(legend$width)
gl <- lapply(plots, function(x)
x + theme(legend.position = "none"))
gl <- c(gl, ncol = ncol, nrow = nrow)
combined <- switch(
position,
"bottom" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight)
),
"right" = arrangeGrob(
do.call(arrangeGrob, gl),
legend,
ncol = 2,
widths = unit.c(unit(1, "npc") - lwidth, lwidth)
)
)
grid.newpage()
grid.draw(combined)
# return gtable invisibly
invisible(combined)
}
grid_arrange_shared_legend(
plot_moore_WaveEnergyLevel,plot_moore_Ub,plot_moore_speed,plot_moore_turf,plot_moore_concrete,
plot_davies_WaveEnergyLevel,plot_davies_Ub,plot_davies_speed,plot_davies_turf2,plot_davies_concrete2,
plot_heron_WaveEnergyLevel,plot_heron_Ub,plot_heron_speed,plot_heron_turf,plot_heron_concrete,
ncol = 5,
nrow = 3)
