moore.env <- moore.env |>
rename(Ub = Ub_avrg,
FlowVel = median_speed,
SedTurf = sedturf_t2,
SedCon = sedconcrete_t2,
Temp = mean_temp)
moore.env <- moore.env |>
rename(Ub = Ub_avrg,
FlowVel = median_speed,
SedTurf = sedturf_t5,
SedCon = sedconcrete_t5,
Temp = mean_temp)
moore.env |>
cor() |>
corrplot(type = 'upper',
order = 'FPC',
diag = FALSE)
moore.env<- moore.env |>
select(-c(range, percentile_90))
moore.env |>
cor() |>
corrplot(type = 'upper',
order = 'FPC',
diag = FALSE)
moore.benthic |>
group_by(Site) |>
summarise(count = n())
library(vegan)
moore.envfit <- envfit(moore.rda, env = moore.env)
moore.envfit
moore.env<- moore.env |>
select(-c(range, percentile_90))
moore.env<- moore.env |>
select(-percentile_10))
moore.env<- moore.env |>
select(-percentile_10)
library(vegan)
moore.envfit <- envfit(moore.rda, env = moore.env)
moore.envfit
## SCRIPT DOES NOT WORK! --> fortify??
#moore.env.scores <- moore.envfit |> fortify()
# Extract vectors from moore.envfit
arrows <- moore.envfit$vectors$arrows
r_values <- moore.envfit$vectors$r
p_values <- moore.envfit$vectors$pvals
# Create a dataframe
envfit_df <- data.frame(Variable = rownames(arrows),
PC1 = arrows[, 1],
PC2 = arrows[, 2],
R_Value = r_values,
P_Value = p_values,
stringsAsFactors = FALSE )
# Optionally, you can set rownames as a separate column
envfit_df$Variable <- rownames(arrows)
moore_env_plot <- moore_plot +
geom_segment(data = envfit_df,
aes(y = 0, x = 0, yend = PC2, xend = PC1),
arrow = arrow(length = unit(0.3, 'lines')), color = 'blue') +
geom_text(data = envfit_df,
aes(y = PC2 * 1.1, x = PC1 * 1.1, label = Variable),
color = 'blue',
family = "Arial",    # Change to your desired font
size = 5) +
theme(
text = element_text(family = "Arial", size = 14, face = "bold"),  # Change to your desired font for the rest of the text
axis.text = element_text(family = "Arial", size = 12),
axis.title = element_text(family = "Arial", size = 14, face = "plain"),
legend.text = element_text(family = "Arial", size = 10)
)
moore_env_plot
lm(1:nrow(moore.env) ~ Ub + FlowVel + SedTurf + SedCon , data=moore.env) |>
vif()
lm(moore_site_df$PC1 ~ Ub + FlowVel + SedTurf + SedCon, data=moore.env) |>
summary()
lm(moore_site_df$PC2 ~ Ub + FlowVel + SedTurf + SedCon, data=moore.env) |>
summary()
ggsave("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Field Data/2022_Deployment_Saskia_YEAR1/Benthic/Quadrats_t0/Output/April2024/RDA Moore.jpeg", moore_plot, width = 10, height = 10, dpi=600)
ggsave("C:/Users/sjurriaa/Australian Institute of Marine Science/Carly Randall - Randall Lab/CAD/CAD Field Data/2022_Deployment_Saskia_YEAR1/Benthic/Quadrats_t0/Output/April2024/RDA Moore Environment.jpeg", moore_env_plot, width = 10, height = 10, dpi = 600)
moore.rda <- rda(moore.std, scale=FALSE)
#rda and the name of your standardized data
# scale is TRUE - to run on correlation
summary(moore.rda, display=NULL)
library(vegan)
moore.envfit <- envfit(moore.rda, env = moore.env)
moore.envfit
lm(1:nrow(moore.env) ~ Ub + FlowVel + SedTurf + SedCon , data=moore.env) |>
vif()
lm(moore_site_df$PC1 ~ Ub + FlowVel + SedTurf + SedCon, data=moore.env) |>
summary()
lm(moore_site_df$PC2 ~ Ub + FlowVel + SedTurf + SedCon, data=moore.env) |>
summary()
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
library(tidyverse)  #for data wrangling etc
library(rstanarm)   #for fitting models in STAN
#library(cmdstanr)   #for cmdstan --> does not work on AIMS computers
library(brms)       #for fitting models in STAN
library(standist)   #for exploring distributions
library(coda)       #for diagnostics
library(bayesplot)  #for diagnostics
library(ggmcmc)     #for MCMC diagnostics
library(DHARMa)     #for residual diagnostics
library(rstan)      #for interfacing with STAN
library(emmeans)    #for marginal means etc
library(broom)      #for tidying outputs
library(tidybayes)  #for more tidying outputs
library(HDInterval) #for HPD intervals
library(ggeffects)  #for partial plots
library(broom.mixed)#for summarising models
library(posterior)  #for posterior draws
library(ggeffects)  #for partial effects plots
library(patchwork)  #for multi-panel figures
library(bayestestR) #for ROPE
library(see)        #for some plots
library(readxl)     #to load excel documents
library(easystats)     #framework for stats, modelling and visualisation
#library(INLA)       #for approximate Bayes
library(openxlsx)    # to write excel documents
#library(INLAutils)  #for additional INLA outputs
theme_set(theme_grey()) #put the default ggplot theme back
source('helperFunctions.R')
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="NA")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
moore_surv_t6 <- survival |> filter (Reef == "Moore",
Census == "t6",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab, Spp))
moore_surv <- survival |> filter (Reef == "Moore",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab, Spp))
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
moore_t5 <- merge(moore_env, moore_surv_t6, by = c("Reef", "Site", "ReefDev"), all = TRUE)
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
#free up space
remove(moore_surv, moore_env)
# Remove rows with missing values
moore_t5$SurvDev <- as.numeric(moore_t5$SurvDev)
moore_t5 <- moore_t5[complete.cases(moore_t5$SurvDev),  ]
moore_t5 <- moore_t5[complete.cases(moore_t5$PC1),  ]
moore_t5 <- moore_t5 |> select(-c(sedturf_t2, sedconcrete_t2))
# Remove rows with missing values
moore$SurvDev <- as.numeric(moore$SurvDev)
moore <- moore[complete.cases(moore$SurvDev),  ]
moore <- moore[complete.cases(moore$PC1),  ]
moore <- moore |> select(-c(sedturf_t2, sedconcrete_t2))
library(lme4)
moore_t5$Site <- as.factor(moore_t5$Site)
moore_t5$ReefDev<- as.factor(moore_t5$ReefDev)
moore$Site <- as.factor(moore_t5$Site)
moore$Site <- as.factor(moore_t5$Site)
moore$Site
moore$Site <- as.factor(moore$Site)
moore$ReefDev<- as.factor(moore$ReefDev)
moore_glmer1<- glmer(SurvDev ~ (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit")) #allowing for random intercepts but not random slopes --> accounting for potential variability in survival beteeen different sites and devices, but assuming that the effect of device on  survival is constant across different sites.
moore_glmer2<- glmer(SurvDev ~ Ub_avrg + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer3<- glmer(SurvDev ~ WaveEnergyLevel + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer4<- glmer(SurvDev ~ median_speed + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
moore_glmer5<- glmer(SurvDev ~ sedturf_t5 + (1|Site) + (1|ReefDev), data=moore_t5, family = binomial(link = "logit"))
summary(moore_glmer1)
summary(moore_glmer2)
summary(moore_glmer3)
summary(moore_glmer4)
summary(moore_glmer5)
AIC(moore_glmer1, moore_glmer2, moore_glmer3, moore_glmer4, moore_glmer5)
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = WaveEnergyLevel)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm")
ggplot(data=moore_t5, aes(y = SurvDev, x = WaveEnergyLevel)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm", formula = y~poly(x,3), se = FALSE)
#with facetwrap by site
ggplot(data=moore_t5, aes(y = SurvDev, x = WaveEnergyLevel)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Site) +
geom_smooth(method="lm")
Moore_current <- ggplot(moore_t5, aes(x = median_speed, y = SurvDev)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
geom_smooth(method="lm") +
labs(title = "Moore Reef",
x = "In-situ current - median speed (m/s)",
y = "% Survival (yield)") +
theme_bw() +
ylim(0,1) +
theme(panel.border = element_rect(color = "black", fill = NA),
axis.line = element_line(color = "black"),
axis.text = element_text(size = 12),
axis.title = element_text(size = 14))
Moore_current
ggsave("Moore - Survival final census Current - yield.png", plot=Moore_current, width = 4, height = 6, dpi = 600)
moore_t5 <- moore_t5 |> mutate(Site = factor(Site),
ReefDev = factor(ReefDev))
moore <- moore |> mutate(Site = factor(Site),
ReefDev = factor(ReefDev))
moore_form <- bf(SurvDev ~ (1|Site), family = bernoulli(link='logit'))
moore_form_speed <- bf(SurvDev ~ median_speed +    (1|Site), family = bernoulli(link='logit'))
moore_form_Ub <-    bf(SurvDev ~ Ub_avrg +         (1|Site), family = bernoulli(link='logit'))
moore_form_turf <-   bf(SurvDev ~ sedturf_t5 +     (1|Site), family = bernoulli(link='logit'))
moore_form_concrete <-bf(SurvDev ~ sedconcrete_t5 +(1|Site), family = bernoulli(link='logit'))
moore_form_Wave <-  bf(SurvDev ~ WaveEnergyLevel + (1|Site), family = bernoulli(link='logit'))
moore_form_PCA <-   bf(SurvDev ~ PC1 +   PC2 +          (1|Site), family = bernoulli(link='logit'))
priors <- prior(normal(0, 1.7), class = "Intercept") +
prior(student_t(3, 0, 1.5), class = 'sd')
{r}
#| label: libraries
#| output: false
#| eval: true
#| warning: false
#| message: false
#| cache: false
library(tidyverse)  #for data wrangling etc
library(rstanarm)   #for fitting models in STAN
#library(cmdstanr)   #for cmdstan --> does not work on AIMS computers
library(brms)       #for fitting models in STAN
library(standist)   #for exploring distributions
library(coda)       #for diagnostics
library(bayesplot)  #for diagnostics
library(ggmcmc)     #for MCMC diagnostics
library(DHARMa)     #for residual diagnostics
library(rstan)      #for interfacing with STAN
library(emmeans)    #for marginal means etc
library(broom)      #for tidying outputs
library(tidybayes)  #for more tidying outputs
library(HDInterval) #for HPD intervals
library(ggeffects)  #for partial plots
library(broom.mixed)#for summarising models
library(posterior)  #for posterior draws
library(ggeffects)  #for partial effects plots
library(patchwork)  #for multi-panel figures
library(bayestestR) #for ROPE
library(see)        #for some plots
library(readxl)     #to load excel documents
library(easystats)     #framework for stats, modelling and visualisation
#library(INLA)       #for approximate Bayes
library(openxlsx)    # to write excel documents
#library(INLAutils)  #for additional INLA outputs
theme_set(theme_grey()) #put the default ggplot theme back
source('helperFunctions.R')
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="na")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="na")
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID))
moore_surv <- survival |> filter (Reef == "Moore",
Census == "t6",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
davies_surv <- survival |> filter (Reef == "Davies",
Census == "t6",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
heron_surv <- survival |> filter (Reef == "Heron",
Census == "t3",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
davies_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
davies_env <- environment |>
filter (Reef == "Davies") |>
select(-c(Reef1, Device_ID))
heron_env <- environment |>
filter (Reef == "Heron") |>
select(-c(Reef1, Device_ID))
moore_surv <- survival |> filter (Reef == "Moore",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
davies_surv <- survival |> filter (Reef == "Davies",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
davies_env <- environment |>
filter (Reef == "Davies") |>
select(-c(Reef1, Device_ID))
heron_surv <- survival |> filter (Reef == "Heron",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
heron_env <- environment |>
filter (Reef == "Heron") |>
select(-c(Reef1, Device_ID))
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
View(moore)
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
davies <- merge(davies_env, davies_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
heron <- merge(heron_env, heron_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
#free up space
remove(moore_surv, moore_env)
remove(davies_surv, davies_env)
remove(heron_surv, heron_env)
moore$SurvDev <- as.numeric(moore$SurvDev)
moore <- moore[complete.cases(moore$SurvDev),  ]
moore <- moore[complete.cases(moore$PC1),  ]
moore <- moore |> select(-c(sedturf_t2, sedconcrete_t2))
davies$SurvDev <- as.numeric(davies$SurvDev)
davies <- davies[complete.cases(davies$SurvDev),  ]
davies <- davies[complete.cases(davies$PC1),  ]
davies <- davies |> select(-c(sedturf_t2, sedconcrete_t2))
davies_surv <- survival |> filter (Reef == "Davies",
Tab_ID == 1) |>
select(-c(Tab_ID, SurvTab))
davies_env <- environment |>
filter (Reef == "Davies") |>
select(-c(Reef1, Device_ID))
davies <- merge(davies_env, davies_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
remove(davies_surv, davies_env)
heron$SurvDev <- as.numeric(heron$SurvDev)
heron <- heron[complete.cases(heron$SurvDev),  ]
heron <- heron[complete.cases(heron$PC1),  ]
heron <- heron |> select(-c(sedturf_t5, sedconcrete_t5))
davies$SurvDev <- as.numeric(davies$SurvDev)
davies <- davies[complete.cases(davies$SurvDev),  ]
davies <- davies[complete.cases(davies$PC1),  ]
library(lme4)
moore$Site <- as.factor(moore$Site)
moore$ReefDev<- as.factor(moore$ReefDev)
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="na")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="na")
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID))
survival <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm)
survival_cleaned <- survival[complete.cases(survival$Size),  ]
View(survival_cleaned)
survival_cleaned <- na.omit(survival$Size)
survival_cleaned <- na.omit(survival$Size)
survival_cleaned <- survival[!is.na(survival$Size), ]
survival <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm)
survival_cleaned <- survival[!is.na(survival$Size), ]
survival <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
View(survival_size)
View(survival)
str(survival)
survival <- survival |>
mutate(LinLength_mm = as.numeric(LinLength_mm),
PerpLength_mm = as.numeric(PerpLength_mm),
Height_mm = as.numeric(Height_mm)
)
survival <- survival |>
mutate(LinLength_mm = as.numeric(LinLength_mm),
PerpLenght_mm = as.numeric(PerpLenght_mm),
Height_mm = as.numeric(Height_mm)
)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
View(survival_size)
library(readr)
survival <- read_excel("data/YEAR1_Survival.xlsx", na = "na")
survival <- survival %>%
mutate(
LinLength_mm = parse_number(LinLength_mm),
PerpLength_mm = parse_number(PerpLength_mm),
Height_mm = parse_number(Height_mm)
)
str(survival)
unique(survival$LinLength_mm)
survival <- read_excel("data/YEAR1_Survival.xlsx", na = "na")
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID))
survival <- survival |>
mutate(LinLength_mm = as.numeric(LinLength_mm),
PerpLenght_mm = as.numeric(PerpLenght_mm),
Height_mm = as.numeric(Height_mm)
)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
View(survival_size)
View(survival)
survival <- read_excel("data/YEAR1_Survival.xlsx", na = "na")
View(survival)
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID))
survival <- survival |>
mutate(LinLength_mm = as.numeric(LinLength_mm),
PerpLenght_mm = as.numeric(PerpLenght_mm),
Height_mm = as.numeric(Height_mm)
)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
View(survival_size)
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="na")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="na")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="na")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="na")
View(survival)
str(survival)
library(readxl)
YEAR1_Survival <- read_excel("data/YEAR1_Survival.xlsx",
col_types = c("numeric", "skip", "text",
"skip", "skip", "numeric", "skip",
"text", "text", "numeric", "skip",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric"), na = "na")
View(YEAR1_Survival)
survival <- read_excel("data/YEAR1_Survival.xlsx",
col_types = c("numeric", "skip", "text",
"skip", "skip", "numeric", "skip",
"text", "text", "numeric", "skip",
"text", "numeric", "text", "numeric",
"numeric", "numeric", "numeric",
"numeric"), na = "na")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="na")
survival <- survival |>
mutate(LinLength_mm = as.numeric(LinLength_mm),
PerpLenght_mm = as.numeric(PerpLenght_mm),
Height_mm = as.numeric(Height_mm)
)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
remove(YEAR1_Survival)
moore_surv <- survival |> filter (Reef == "Moore",
Census =="t6"
moore_env <- environment |>
moore_surv <- survival |> filter (Reef == "Moore",
Census =="t6")
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
davies_surv <- survival |> filter (Reef == "Davies",
Census == "t6")
davies_env <- environment |>
filter (Reef == "Davies") |>
select(-c(Reef1, Device_ID))
heron_surv <- survival |> filter (Reef == "Heron",
Census == "t3")
heron_env <- environment |>
filter (Reef == "Heron") |>
select(-c(Reef1, Device_ID))
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
davies <- merge(davies_env, davies_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
heron <- merge(heron_env, heron_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
#free up space
remove(moore_surv, moore_env)
remove(davies_surv, davies_env)
remove(heron_surv, heron_env)
remove(survival_size)
View(heron)
survival_size <- survival |>
mutate(Size = LinLength_mm * PerpLenght_mm * Height_mm) |>
filter(!is.na(Size))
moore_surv <- survival_size |> filter (Reef == "Moore",
Census =="t6")
moore_env <- environment |>
filter (Reef == "Moore") |>
select(-c(Reef1, Device_ID))
davies_surv <- survival_size |> filter (Reef == "Davies",
Census == "t6")
davies_env <- environment |>
filter (Reef == "Davies") |>
select(-c(Reef1, Device_ID))
heron_surv <- survival_size |> filter (Reef == "Heron",
Census == "t3")
heron_env <- environment |>
filter (Reef == "Heron") |>
select(-c(Reef1, Device_ID))
moore <- merge(moore_env, moore_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
davies <- merge(davies_env, davies_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
heron <- merge(heron_env, heron_surv, by = c("Reef", "Site", "ReefDev"), all = TRUE)
#free up space
remove(moore_surv, moore_env)
remove(davies_surv, davies_env)
remove(heron_surv, heron_env)
remove(survival_size)
View(moore)
