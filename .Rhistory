geom_line(data = predicted_data_davies_brm5, aes(x = sedconcrete_t2, y = Fitted, group = Spp, color = Spp)) +
geom_ribbon(data = predicted_data_davies_brm5, aes(x = sedconcrete_t2, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(title = "Davies Reef",
x = "Sedimentation on concrete (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species",
fill = "Species") +
scale_color_manual(values = c("A_hyacinthus" = "darkorange")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange")) +
theme_minimal() +
theme(panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_davies_concrete <- ggplot() +
# Plot the raw data points, colored in orange
geom_point(data = davies, aes(x = sedconcrete_t2, y = Size_log), color = "orange", alpha = 0.5) +
# Plot the predicted values with error bars, colored in dark orange
geom_point(data = predicted_data_davies_brm5, aes(x = sedconcrete_t2, y = Fitted), color = "darkorange") +
geom_errorbar(data = predicted_data_davies_brm5, aes(x = sedconcrete_t2, ymin = Lower, ymax = Upper), color = "darkorange", width = 0.02, alpha = 0.5) +
labs(
title = "Davies Reef",
x = "Sedimentation on concrete (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species"
) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
plot(plot_davies_concrete)
plot_davies_Ub
plot_davies_WaveEnergyLevel
plot_davies_speed
plot_davies_turf
plot_davies_concrete
ggsave("output/figures growth/Davies Predicted growth Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
getwd()
ggsave("/output/figures growth/Davies Predicted growth Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
plot_davies_Ub
plot_davies_WaveEnergyLevel
plot_davies_speed
plot_davies_turf
plot_davies_concrete
ggsave("output/figures bayes growth/Davies Predicted growth Ub.jpeg", plot_davies_Ub, width = 10, height = 6)
ggsave("output/figures bayes growth/Davies Predicted growth WaveEnergyLevel.jpeg", plot_davies_WaveEnergyLevel, width = 10, height = 6)
ggsave("output/figures bayes growth/Davies Predicted growth Median Speed.jpeg", plot_davies_speed, width = 10, height = 6)
ggsave("output/figures bayes growth/Davies Predicted growth Turf.jpeg", plot_davies_turf, width = 10, height = 6)
ggsave("output/figures bayes growth/Davies Predicted growth Concrete.jpeg", plot_davies_concrete, width = 10, height = 6)
# Extract fitted values and predictors
fitted_values_heron_brm2 <- fitted(heron_brm2_size_Spp, summary = FALSE)
predicted_data_heron_brm2 <- data.frame(
Ub_avrg = heron$Ub_avrg,
Spp = heron$Spp,
Fitted = apply(fitted_values_heron_brm2, 2, mean),
Lower = apply(fitted_values_heron_brm2, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_heron_brm2, 2, function(x) quantile(x, 0.975))
)
# Create the plot with points, error bars, and raw data
ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = Ub_avrg, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted data points, colored by species
geom_point(data = predicted_data_heron_brm2, aes(x = Ub_avrg, y = Fitted, color = Spp), alpha = 0.5) +
# Line for fitted values, colored by species
geom_line(data = predicted_data_heron_brm2, aes(x = Ub_avrg, y = Fitted, color = Spp, group = Spp)) +
# CI ribbon, filled by species
geom_ribbon(data = predicted_data_heron_brm2, aes(x = Ub_avrg, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(
title = "Heron Reef",
x = "Bottom stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species",  # Rename color legend title
fill = "Species"    # Rename fill legend title
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_Ub<- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = Ub_avrg, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm2, aes(x = Ub_avrg, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm2, aes(x = Ub_avrg, ymin = Lower, ymax = Upper, color = Spp), width = 0.02, alpha = 0.5) +
labs(
title = "Predicted Values with 95% Confidence Intervals and Raw Data",
x = "Bottom stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Extract fitted values and predictors
fitted_values_heron_brm1 <- fitted(heron_brm1_size_Spp, summary = FALSE)
predicted_data_heron_brm1 <- data.frame(
WaveEnergyLevel = heron$WaveEnergyLevel,
Spp = heron$Spp,
Fitted = apply(fitted_values_heron_brm1, 2, mean),
Lower = apply(fitted_values_heron_brm1, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_heron_brm1, 2, function(x) quantile(x, 0.975))
)
# Create the plot with points, error bars, and raw data
ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted data points, colored by species
geom_point(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, y = Fitted, color = Spp), alpha = 0.5) +
# Line for fitted values, colored by species
geom_line(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, y = Fitted, color = Spp, group = Spp)) +
# CI ribbon, filled by species
geom_ribbon(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(
title = "Predicted Values with 95% Confidence Intervals",
x = "WaveEnergyLevel",
y = "Predicted growth (mm3)",
color = "Species",  # Rename color legend title
fill = "Species"    # Rename fill legend title
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper, color = Spp), width = 0.05) +
labs(
title = "Predicted Values with 95% Confidence Intervals and Raw Data",
x = "WaveEnergyLevel",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Extract fitted values and predictors
fitted_values_heron_brm3 <- fitted(heron_brm3_size_Spp, summary = FALSE)
predicted_data_heron_brm3 <- data.frame(
median_speed = heron$median_speed,
Spp = heron$Spp,
Fitted = apply(fitted_values_heron_brm3, 2, mean),
Lower = apply(fitted_values_heron_brm3, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_heron_brm3, 2, function(x) quantile(x, 0.975))
)
# Create the plot with points, error bars, and raw data
ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted data points, colored by species
geom_point(data = predicted_data_heron_brm3, aes(x = median_speed, y = Fitted, color = Spp), alpha = 0.5) +
# Line for fitted values, colored by species
geom_line(data = predicted_data_heron_brm3, aes(x = median_speed, y = Fitted, color = Spp, group = Spp)) +
# CI ribbon, filled by species
geom_ribbon(data = predicted_data_heron_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(
title = "Predicted Values with 95% Confidence Intervals",
x = "Median flow velocity (m/s)",
y = "Predicted growth (mm3)",
color = "Species",  # Rename color legend title
fill = "Species"    # Rename fill legend title
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_speed <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm3, aes(x = median_speed, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper, color = Spp), width = 0.005, alpha = 0.5) +
labs(
title = "Predicted Values with 95% Confidence Intervals and Raw Data",
x = "Bottom stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Extract fitted values and predictors
fitted_values_heron_brm4 <- fitted(heron_brm4_size_Spp, summary = FALSE)
predicted_data_heron_brm4 <- data.frame(
sedturf_t2 = heron$sedturf_t2,
Spp = heron$Spp,
Fitted = apply(fitted_values_heron_brm4, 2, mean),
Lower = apply(fitted_values_heron_brm4, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_heron_brm4, 2, function(x) quantile(x, 0.975))
)
# Create the plot with points, error bars, and raw data
ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedturf_t2, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted data points, colored by species
geom_point(data = predicted_data_heron_brm4, aes(x = sedturf_t2, y = Fitted, color = Spp), alpha = 0.5) +
# Line for fitted values, colored by species
geom_line(data = predicted_data_heron_brm4, aes(x = sedturf_t2, y = Fitted, color = Spp, group = Spp)) +
# CI ribbon, filled by species
geom_ribbon(data = predicted_data_heron_brm4, aes(x = sedturf_t2, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(
title = "Predicted Values with 95% Confidence Intervals",
x = "Sedimentation on turf (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species",  # Rename color legend title
fill = "Species"    # Rename fill legend title
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_turf <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedturf_t2, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm4, aes(x = sedturf_t2, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm4, aes(x = sedturf_t2, ymin = Lower, ymax = Upper, color = Spp), width = 0.8, alpha = 0.5) +
labs(
title = "Predicted Values with 95% Confidence Intervals and Raw Data",
x = "Sedimentation on turf (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Extract fitted values and predictors
fitted_values_heron_brm5 <- fitted(heron_brm5_size_Spp, summary = FALSE)
predicted_data_heron_brm5 <- data.frame(
sedconcrete_t2 = heron$sedconcrete_t2,
Spp = heron$Spp,
Fitted = apply(fitted_values_heron_brm4, 2, mean),
Lower = apply(fitted_values_heron_brm4, 2, function(x) quantile(x, 0.025)),
Upper = apply(fitted_values_heron_brm4, 2, function(x) quantile(x, 0.975))
)
# Create the plot with points, error bars, and raw data
ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedconcrete_t2, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted data points, colored by species
geom_point(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, y = Fitted, color = Spp), alpha = 0.5) +
# Line for fitted values, colored by species
geom_line(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, y = Fitted, color = Spp, group = Spp)) +
# CI ribbon, filled by species
geom_ribbon(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, ymin = Lower, ymax = Upper, fill = Spp), alpha = 0.2) +
labs(
title = "Predicted Values with 95% Confidence Intervals",
x = "Sedimentation on concrete (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species",  # Rename color legend title
fill = "Species"    # Rename fill legend title
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
scale_fill_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_concrete <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedconcrete_t2, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, ymin = Lower, ymax = Upper, color = Spp), width = 0.1, alpha = 0.5) +
labs(
title = "Predicted Values with 95% Confidence Intervals and Raw Data",
x = "Sedimentation on concrete (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
plot_heron_Ub
plot_heron_WaveEnergyLevel
plot_heron_speed
plot_heron_turf
plot_heron_concrete
ggsave("output/figures bayes growth/Heron Predicted growth Ub.jpeg", plot_heron_Ub, width = 10, height = 6)
ggsave("output/figures bayes growth/Heron Predicted growth WaveEnergyLevel.jpeg", plot_heron_WaveEnergyLevel, width = 10, height = 6)
ggsave("output/figures bayes growth/Heron Predicted growth Median Speed.jpeg", plot_heron_speed, width = 10, height = 6)
ggsave("output/figures bayes growth/Heron Predicted growth Turf.jpeg", plot_heron_turf, width = 10, height = 6)
ggsave("output/figures bayes growth/Heron Predicted growth Concrete.jpeg", plot_heron_concrete, width = 10, height = 6)
plot_heron_Ub
plot_heron_WaveEnergyLevel
plot_heron_speed
plot_heron_turf
plot_heron_concrete
ggsave("output/figures bayes growth/Heron Predicted growth Ub.jpeg", plot_heron_Ub, width = 8, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth WaveEnergyLevel.jpeg", plot_heron_WaveEnergyLevel, width = 8, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Median Speed.jpeg", plot_heron_speed, width = 8, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Turf.jpeg", plot_heron_turf, width = 8, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Concrete.jpeg", plot_heron_concrete, width = 8, height = 4)
plot_heron_Ub
plot_heron_WaveEnergyLevel
plot_heron_speed
plot_heron_turf
plot_heron_concrete
ggsave("output/figures bayes growth/Heron Predicted growth Ub.jpeg", plot_heron_Ub, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth WaveEnergyLevel.jpeg", plot_heron_WaveEnergyLevel, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Median Speed.jpeg", plot_heron_speed, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Turf.jpeg", plot_heron_turf, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Concrete.jpeg", plot_heron_concrete, width = 4, height = 4)
# Create the plot with points, error bars, and raw data
plot_heron_Ub<- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = Ub_avrg, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm2, aes(x = Ub_avrg, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm2, aes(x = Ub_avrg, ymin = Lower, ymax = Upper, color = Spp), width = 0.02, alpha = 0.5) +
labs(
title = "Heron Reef",
x = "Bottom stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper, color = Spp), width = 0.05) +
labs(
title = "Heron Reef",
x = "WaveEnergyLevel",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_speed <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm3, aes(x = median_speed, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper, color = Spp), width = 0.005, alpha = 0.5) +
labs(
title = "Heron Reef",
x = "Bottom stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_turf <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedturf_t2, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm4, aes(x = sedturf_t2, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm4, aes(x = sedturf_t2, ymin = Lower, ymax = Upper, color = Spp), width = 0.8, alpha = 0.5) +
labs(
title = "Heron Reef",
x = "Sedimentation on turf (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_concrete <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = sedconcrete_t2, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm5, aes(x = sedconcrete_t2, ymin = Lower, ymax = Upper, color = Spp), width = 0.1, alpha = 0.5) +
labs(
title = "Heron Reef",
x = "Sedimentation on concrete (mg cm-2)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
plot_heron_Ub
plot_heron_WaveEnergyLevel
plot_heron_speed
plot_heron_turf
plot_heron_concrete
ggsave("output/figures bayes growth/Heron Predicted growth Ub.jpeg", plot_heron_Ub, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth WaveEnergyLevel.jpeg", plot_heron_WaveEnergyLevel, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Median Speed.jpeg", plot_heron_speed, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Turf.jpeg", plot_heron_turf, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Concrete.jpeg", plot_heron_concrete, width = 4, height = 4)
# Create the plot with points, error bars, and raw data
plot_heron_WaveEnergyLevel <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = WaveEnergyLevel, y = Size_log, color = Spp), alpha = 0.4) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm1, aes(x = WaveEnergyLevel, ymin = Lower, ymax = Upper, color = Spp), width = 0.05) +
labs(
title = "Heron Reef",
x = "Nominal Wave Energy Level",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
# Create the plot with points, error bars, and raw data
plot_heron_speed <- ggplot() +
# Plot the raw data points, colored by species
geom_point(data = heron, aes(x = median_speed, y = Size_log, color = Spp), alpha = 0.5) +
# Plot the predicted values with error bars, colored by species
geom_point(data = predicted_data_heron_brm3, aes(x = median_speed, y = Fitted, color = Spp)) +
geom_errorbar(data = predicted_data_heron_brm3, aes(x = median_speed, ymin = Lower, ymax = Upper, color = Spp), width = 0.005, alpha = 0.5) +
labs(
title = "Heron Reef",
x = "Median flow velocity stress (m/s)",
y = "Predicted growth (mm3)",
color = "Species"
) +
scale_color_manual(values = c("A_hyacinthus" = "orange", "A_tenuis" = "purple")) +
theme_minimal() +
theme(
panel.border = element_rect(color = "black", fill = NA, size = 0.5),
axis.ticks = element_line(color = "black", size = 0.5),
axis.ticks.length = unit(0.25, "cm") # Adjust tick length as needed
)
plot_heron_Ub
plot_heron_WaveEnergyLevel
plot_heron_speed
plot_heron_turf
plot_heron_concrete
ggsave("output/figures bayes growth/Heron Predicted growth Ub.jpeg", plot_heron_Ub, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth WaveEnergyLevel.jpeg", plot_heron_WaveEnergyLevel, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Median Speed.jpeg", plot_heron_speed, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Turf.jpeg", plot_heron_turf, width = 4, height = 4)
ggsave("output/figures bayes growth/Heron Predicted growth Concrete.jpeg", plot_heron_concrete, width = 4, height = 4)
