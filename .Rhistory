data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
save(moore_brm1_size, file = "scripts/models/moore/size/moore_brm1_size.RData")
save(moore_brm1_size, file = "scripts/models/moore/size/moore_brm1_size.RData")
summary(moore_brm1_size)
conditional_effects(moore_brm1_size)
pp_check(moore_brm1_size)
plot(residuals(moore_brm1_size))
pp_check(moore_brm1_size)
plot(residuals(moore_brm1_size))
pp_check(moore_brm1_size)
moore_brm1_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm1_size |> pp_check (type = "error_scatter_avg")
moore_brm1_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore_brm1_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore_brm1_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm1_size |> pp_check (type = "error_scatter_avg")
moore_brm1_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids <- make_brms_dharma_res(moore_brm1_size, integerResponse = FALSE)
testUniformity(moore.resids)
moore.resids <- make_brms_dharma_res(moore_brm1_size, integerResponse = FALSE)
testUniformity(moore.resids)
plotResiduals(moore.resids)
testDispersion(moore.resids)
testZeroInflation(moore.resids)
moore_size_Ub <-  bf(Size_log ~ Ub_avrg + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - Ub
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm2_size <- brm(moore_size_Ub,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(moore_brm2_size, file = "scripts/models/moore/size/moore_brm2_size.RData")
save(moore_brm2_size, file = "scripts/models/moore/size/moore_brm2_size.RData")
moore_brm2_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm2_size |> pp_check (type = "error_scatter_avg")
moore_brm2_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids2 <- make_brms_dharma_res(moore_brm2_size, integerResponse = FALSE)
testUniformity(moore.resids2)
plot(moore.resids2)
plotResiduals(moore.resids2)
testDispersion(moore.resids2)
testZeroInflation(moore.resids2)
moore_size_speed <-  bf(Size_log ~ median_speed + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm3_size <- brm(moore_size_speed,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(moore_brm3_size, file = "scripts/models/moore/size/moore_brm3_size.RData")
save(moore_brm3_size, file = "scripts/models/moore/size/moore_brm3_size.RData")
moore_brm3_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm3_size |> pp_check (type = "error_scatter_avg")
moore_brm3_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids3 <- make_brms_dharma_res(moore_brm3_size, integerResponse = FALSE)
testUniformity(moore.resids3)
plot(moore.resids3)
plotResiduals(moore.resids3)
testDispersion(moore.resids3)
testZeroInflation(moore.resids3)
moore_size_turf <-  bf(Size_log ~ sedturf_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm4_size <- brm(moore_size_turf,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(moore_brm4_size, file = "scripts/models/moore/size/moore_brm4_size.RData")
moore_brm4_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm4_size |> pp_check (type = "error_scatter_avg")
moore_brm4_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids4 <- make_brms_dharma_res(moore_brm4_size, integerResponse = FALSE)
testUniformity(moore.resids4)
plot(moore.resids4)
plotResiduals(moore.resids4)
testDispersion(moore.resids4)
testZeroInflation(moore.resids4)
save(moore_brm4_size, file = "scripts/models/moore/size/moore_brm4_size.RData")
moore_size_concrete <-  bf(Size_log ~ sedconcrete_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm5_size <- brm(moore_size_concrete,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
moore_size_concrete <-  bf(Size_log ~ sedconcrete_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm5_size <- brm(moore_size_concrete,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(moore_brm5_size, file = "scripts/models/moore/size/moore_brm5_size.RData")
save(moore_brm5_size, file = "scripts/models/moore/size/moore_brm5_size.RData")
moore_brm5_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm5_size |> pp_check (type = "error_scatter_avg")
moore_brm5_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids5 <- make_brms_dharma_res(moore_brm5_size, integerResponse = FALSE)
testUniformity(moore.resids5)
plot(moore.resids5)
plotResiduals(moore.resids5)
testDispersion(moore.resids5)
testZeroInflation(moore.resids5)
moore_size_habitat <-  bf(Size_log ~ PC1 + PC2 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
moore_brm6_size <- brm(moore_size_habitat,
data=moore,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(moore_brm6_size, file = "scripts/models/moore/size/moore_brm6_size.RData")
save(moore_brm6_size, file = "scripts/models/moore/size/moore_brm6_size.RData")
moore_brm6_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm6_size |> pp_check (type = "error_scatter_avg")
moore_brm6_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids6 <- make_brms_dharma_res(moore_brm6_size, integerResponse = FALSE)
testUniformity(moore.resids6)
plot(moore.resids6)
plotResiduals(moore.resids6)
testDispersion(moore.resids6)
testZeroInflation(moore.resids6)
moore_brm6_size |> pp_check(type = 'dens_overlay', ndraws = 100)
moore_brm6_size |> pp_check (type = "error_scatter_avg")
moore_brm6_size  |> pp_check(group = 'Site', type = 'violin_grouped')
moore.resids6 <- make_brms_dharma_res(moore_brm6_size, integerResponse = FALSE)
testUniformity(moore.resids6)
plot(moore.resids6)
plotResiduals(moore.resids6)
testDispersion(moore.resids6)
testZeroInflation(moore.resids6)
save(moore_brm6_size, file = "scripts/models/moore/size/moore_brm6_size.RData")
#Using loo compare, lower value is better
l_wave <- moore_brm1_size |> loo()
l_Ub <- moore_brm2_size |> loo()
l_speed <- moore_brm3_size |> loo()
l_turf <- moore_brm4_size|> loo()
l_concrete <- moore_brm5_size|> loo()
l_habitat <- moore_brm6_size|> loo()
looic(moore_brm1_size)           #  LOOIC: 1107.86 [34.06]
looic(moore_brm2_size)     #  LOOIC: 1108.62   [34.20]
looic(moore_brm3_size)      #  LOOIC: 1108.24  [34.17]
looic(moore_brm4_size)  #  LOOIC: 1108.36 [34.05]
looic(moore_brm5_size)      #  LOOIC: 1107.98   [34.20]
looic(moore_brm6_size)       #  LOOIC: 1108.53   [34.18]
loo_compare(l_speed, l_Ub, l_wave, l_turf, l_concrete, l_habitat)
loo_compare(l_speed, l_Ub, l_wave, l_turf, l_concrete)
#Using loo compare, lower value is better
l_wave <- moore_brm1_size |> loo()
l_wave
l_speed
l_Ub
l_wave
l_turf
l_habitat
summary(moore_brm6_size)
summary(moore_brm1_size)
summary(moore_brm2_size)
summary(moore_brm3_size)
summary(moore_brm4_size)
summary(moore_brm5_size)
summary(moore_brm6_size)
davies_size_wave <-  bf(Size_log ~ WaveEnergyLevel + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - WaveEnergyLevel
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm1_size <- brm(davies_size_wave,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3, cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm1_size, file = "scripts/models/davies/size/davies_brm1_size.RData")
save(davies_brm1_size, file = "scripts/models/davies/size/davies_brm1_size.RData")
save(davies_brm1_size, file = "scripts/models/davies/size/davies_brm1_size.RData")
davies_brm1_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm1_size |> pp_check (type = "error_scatter_avg")
davies_brm1_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids1 <- make_brms_dharma_res(davies_brm1_size, integerResponse = FALSE)
testUniformity(davies.resids1)
plotResiduals(davies.resids1)
testDispersion(davies.resids1)
davies_size_Ub <-  bf(Size_log ~ Ub_avrg + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - Ub
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm2_size <- brm(davies_size_Ub,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm2_size, file = "scripts/models/davies/size/davies_brm2_size.RData")
save(davies_brm2_size, file = "scripts/models/davies/size/davies_brm2_size.RData")
davies_brm2_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm2_size |> pp_check (type = "error_scatter_avg")
davies_brm2_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids2 <- make_brms_dharma_res(davies_brm2_size, integerResponse = FALSE)
testUniformity(davies.resids2)
plotResiduals(davies.resids2)
testDispersion(davies.resids2)
davies_size_speed <-  bf(Size_log ~ median_speed + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm3_size <- brm(davies_size_speed,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm3_size, file = "scripts/models/davies/size/davies_brm3_size.RData")
save(davies_brm3_size, file = "scripts/models/davies/size/davies_brm3_size.RData")
davies_brm3_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm3_size |> pp_check (type = "error_scatter_avg")
davies_brm3_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids3 <- make_brms_dharma_res(davies_brm3_size, integerResponse = FALSE)
testUniformity(davies.resids3) plotResiduals(davies.resids3)
davies_brm3_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm3_size |> pp_check (type = "error_scatter_avg")
davies_brm3_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids3 <- make_brms_dharma_res(davies_brm3_size, integerResponse = FALSE)
testUniformity(davies.resids3)
plotResiduals(davies.resids3)
testDispersion(davies.resids3)
davies_size_turf <-  bf(Size_log ~ sedturf_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm4_size <- brm(davies_size_turf,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
davies_size_turf <-  bf(Size_log ~ sedturf_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm4_size <- brm(davies_size_turf,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
davies_size_turf2 <-  bf(Size_log ~ sedturf_t2 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm4_size <- brm(davies_size_turf2,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm4_size, file = "scripts/models/davies/size/davies_brm4_size.RData")
save(davies_brm4_size, file = "scripts/models/davies/size/davies_brm4_size.RData")
davies_brm4_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm4_size |> pp_check (type = "error_scatter_avg")
davies_brm4_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids4 <- make_brms_dharma_res(davies_brm4_size, integerResponse = FALSE)
testUniformity(davies.resids4) plotResiduals(davies.resids4)
davies_brm4_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm4_size |> pp_check (type = "error_scatter_avg")
davies_brm4_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids4 <- make_brms_dharma_res(davies_brm4_size, integerResponse = FALSE)
testUniformity(davies.resids4)
plotResiduals(davies.resids4)
testDispersion(davies.resids4)
davies_size_concrete2 <-  bf(Size_log ~ sedconcrete_t2 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm5_size <- brm(davies_size_concrete2,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm5_size, file = "scripts/models/davies/size/davies_brm5_size.RData")
save(davies_brm5_size, file = "scripts/models/davies/size/davies_brm5_size.RData")
davies_brm5_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm5_size |> pp_check (type = "error_scatter_avg")
davies_brm5_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids5 <- make_brms_dharma_res(davies_brm5_size, integerResponse = FALSE)
testUniformity(davies.resids5)
plotResiduals(davies.resids5)
testDispersion(davies.resids5)
davies_size_turf5 <-  bf(Size_log ~ sedturf_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm6_size <- brm(davies_size_turf5,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm6_size, file = "scripts/models/davies/size/davies_brm6_size.RData")
save(davies_brm6_size, file = "scripts/models/davies/size/davies_brm6_size.RData")
davies_brm6_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm6_size |> pp_check (type = "error_scatter_avg")
davies_brm6_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids6 <- make_brms_dharma_res(davies_brm6_size, integerResponse = FALSE)
testUniformity(davies.resids6)
plotResiduals(davies.resids6)
testDispersion(davies.resids6)
davies_size_concrete5 <-  bf(Size_log ~ sedconcrete_t5 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm7_size <- brm(davies_size_concrete5,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm7_size, file = "scripts/models/davies/size/davies_brm7_size.RData")
save(davies_brm7_size, file = "scripts/models/davies/size/davies_brm7_size.RData")
davies_brm7_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm7_size |> pp_check (type = "error_scatter_avg")
davies_brm7_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids7 <- make_brms_dharma_res(davies_brm7_size, integerResponse = FALSE)
testUniformity(davies.resids7)
plotResiduals(davies.resids7)
testDispersion(davies.resids7)
davies_size_habitat <-  bf(Size_log ~ PC1 + PC2 + (1|Site), family = gaussian())
priors <- prior(normal(0, 5), class = "Intercept") +  # for intercept
prior(normal(0,5), class = "b") +                   # for fixed effects - speed
prior(cauchy(0,2), class = 'sd')                    # for random effects - Site
davies_brm8_size <- brm(davies_size_habitat,
data=davies,
prior = priors,
sample_prior = 'yes',
iter = 5000,
warmup = 1000,
chains = 3,
cores = 3,
thin = 5,
refresh = 0,
control = list(adapt_delta = 0.99),
backend = "rstan")
# To save the model use >>
#save(davies_brm8_size, file = "scripts/models/davies/size/davies_brm8_size.RData")
save(davies_brm8_size, file = "scripts/models/davies/size/davies_brm8_size.RData")
davies_brm8_size |> pp_check(type = 'dens_overlay', ndraws = 100)
davies_brm8_size |> pp_check (type = "error_scatter_avg")
davies_brm8_size  |> pp_check(group = 'Site', type = 'violin_grouped')
davies.resids8 <- make_brms_dharma_res(davies_brm8_size, integerResponse = FALSE)
testUniformity(davies.resids8)
plotResiduals(davies.resids8)
testDispersion(davies.resids8)
#Using loo compare, lower value is better
l_wave <- davies_brm1_size |> loo()
l_Ub <- davies_brm2_size |> loo()
l_speed <- davies_brm3_size |> loo()
l_turf2 <- davies_brm4_size|> loo()
l_concrete2 <- davies_brm5_size|> loo()
l_turf5 <- davies_brm6_size|> loo()
l_concrete5 <- davies_brm7_size|> loo()
l_habitat <- davies_brm8_size|> loo()
looic(davies_brm1_size)      #  LOOIC: 332.38 [16.84]
looic(davies_brm2_size)      #  LOOIC: 331.93 [16.93]
looic(davies_brm3_size)      #  LOOIC: 332.46 [16.88]
looic(davies_brm4_size)      #  LOOIC: 332.39 [16.73]
looic(davies_brm5_size)      #  LOOIC: 332.68 [16.80]
looic(davies_brm6_size)      #  LOOIC: 309.34 [16.93]
looic(davies_brm7_size)      #  LOOIC: 332.68 [16.80]
looic(davies_brm8_size)      #  LOOIC: 309.34 [16.93]
l_speed
l_Ub
l_wave
l_turf2
l_concrete2
l_turf5
l_concrete5
l_habitat
summary(davies_brm1_size)
summary(davies_brm2_size)
summary(davies_brm3_size)
summary(davies_brm4_size)
summary(davies_brm5_size)
summary(davies_brm6_size)
summary(davies_brm1_size)
summary(davies_brm2_size)
summary(davies_brm3_size)
summary(davies_brm4_size)
summary(davies_brm5_size)
summary(davies_brm6_size)
summary(davies_brm7_size)
summary(davies_brm8_size)
