RDA_Heron <- RDA_Heron |>
mutate(Device_ID = as.numeric(sub("sit", "", label)),
Reef = "Heron")
RDA_Moore <- RDA_Moore |>
mutate(Device_ID = as.numeric(sub("sit", "", label)),
Reef = "Moore")
RDA_Davies <- RDA_Davies |>
mutate(Device_ID = as.numeric(sub("sit", "", label)),
Reef = "Davies")
RDA <-rbind(RDA_Davies,RDA_Heron,RDA_Moore)
#combine RDA and BenticEnv
Y1_Benthic_Environment_DevID <- merge(RDA, BenthicEnv, by = c("Reef", "Device_ID"), all = TRUE)
View(Y1_Benthic_Environment_DevID)
View(Y1_Benthic_Environment_DevID)
Y1_Benthic_Environment_DevID <- Y1_Benthic_Environment_DevID |>
arrange(Reef, Site, Device_ID)
View(Y1_Benthic_Environment_DevID)
write.xlsx(Y1_Benthic_Environment_DevID, "YEAR1 Benthic Environment DeviceID.xlsx", rowName = FALSE)
environment <- read_excel ("data/YEAR1 Benthic Environment DeviceID.xlsx", na="")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
survival <- survival |> mutate(Reef = factor(Reef),
#  WaveEnergyLevel = factor(WaveEnergyLevel),
ReefDev = factor(ReefDev),
Census = factor(Census))
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
heron <- survival |> filter (Reef == "Heron")
#heron_clean <- heron[complete.cases(heron$SurvDev),  ]
# first for A tenuis
heron_Aten <- heron |>
filter(Spp == "A_tenuis") |>
group_by(Census, ReefDev) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Aten2 <- heron_Aten |>
group_by(Census, ReefDev) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
# now for Ahyacinthus
heron_Ahya <- heron |>
filter(Spp == "A_hyacinthus") |>
group_by(Census, ReefDev) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Ahya2 <- heron_Ahya |>
group_by(Census, ReefDev) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
#bind them together to create one dataframe
heron_Spp <- rbind(heron_Ahya2, heron_Aten2)
#free up space
remove(heron_Aten, heron_Aten2, heron_Ahya, heron_Ahya2)
heron_df <- merge(heron_env, heron_Spp, by = c("Reef", "Site", "ReefDev"), all = TRUE)
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp, by = c("Reef", "Site", "ReefDev"), all = TRUE)
View(heron_df)
heron_env <- environment |>
filter(Reef == "Heron",
Census == "t2")
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "ReefDev"), all = TRUE)
View(heron_df)
View(heron_Spp_t2)
View(heron_env)
#Create new column with Device_ID (numeric) instead of ReefDev ("Davies_1")
survival <- survival |>
mutate(Device_ID = sub(".*_", "", ReefDev))
heron <- survival |> filter (Reef == "Heron")
#heron_clean <- heron[complete.cases(heron$SurvDev),  ]
heron_Aten <- heron |>
filter(Spp == "A_tenuis") |>
group_by(Census, ReefDev, Device_ID) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Aten2 <- heron_Aten |>
group_by(Census, ReefDev, Device_ID) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
View(heron_Aten)
# first for A tenuis
heron_Aten <- heron |>
filter(Spp == "A_tenuis") |>
group_by(Census, ReefDev, Device_ID) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Aten2 <- heron_Aten |>
group_by(Census, ReefDev, Device_ID) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
# now for Ahyacinthus
heron_Ahya <- heron |>
filter(Spp == "A_hyacinthus") |>
group_by(Census, ReefDev, Device_ID) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Ahya2 <- heron_Ahya |>
group_by(Census, ReefDev, Device_ID) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
#bind them together to create one dataframe
heron_Spp <- rbind(heron_Ahya2, heron_Aten2)
#free up space
remove(heron_Aten, heron_Aten2, heron_Ahya, heron_Ahya2)
View(heron_Spp)
heron_Spp <- heron_Spp |>
arrange(Census, Site, ReefDev)
View(heron_Spp)
heron_Spp <- heron_Spp |>
arrange(Census, Site, Spp, ReefDev)
View(heron_Spp)
#free up space
remove(heron_Aten, heron_Aten2, heron_Ahya, heron_Ahya2)
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "ReefDev"), all = TRUE)
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "Device_ID"), all = TRUE)
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "Device_ID"), all = TRUE)
View(heron_df)
View(heron_df)
152, 21, 3, 4
lookup_Spp <- heron_Spp |>
filter(Device_ID == c(152, 21, 3, 4))
View(lookup_Spp)
lookup_Spp <- heron_Spp |>
filter(ReefDev == c("Heron_152", "Heron_21", "Heron_3", "Heron_4"))
lookup_env <- heron_env |>
filter(Device_ID == c(152, 21, 3, 4))
lookup_env <- heron_env |>
filter(Device_ID %in% c(152, 21, 3, 4))
lookup_Spp <- heron_Spp_t2 |>
filter(Device_ID %in% c(152, 21, 3, 4))
View(lookup_Spp)
View(lookup_env)
Y1Environment<-FinalMetrics_Summary <- read_excel("data/FinalMetrics_Summary.xlsx")
Y1Benthic <- read_excel("data/YEAR1_Benthic_data.xlsx")
RDA_Davies <- read_excel("output/Community Composition/RDA sites Davies.xlsx")
RDA_Heron <- read_excel("output/Community Composition/RDA sites Heron.xlsx")
#
RDA_Moore <- read_excel("output/Community Composition/RDA sites Moore.xlsx")
#
#Create new column with Device_ID which is just the number instead of ReefDev ("Davies_1") in Y1Benthic
Y1Benthic <- Y1Benthic |>
mutate(Device_ID = sub(".*_", "", ReefDev))
lookup_env <- heron_env |>
filter(Device_ID %in% c(152, 21, 3, 4))
lookup <- Y1Benthic |>
filter(Device_ID %in% c(152, 21, 3, 4))
View(lookup)
lookup2 <- YeBenthic |>
filter(ReefDev == c("Heron_152", "Heron_21", "Heron_3", "Heron_4"))
lookup2 <- Y1Benthic |>
filter(ReefDev == c("Heron_152", "Heron_21", "Heron_3", "Heron_4"))
lookup2 <- Y1Benthic |>
filter(ReefDev %in% c("Heron_152", "Heron_21", "Heron_3", "Heron_4"))
View(lookup2)
# Merge the two data frames by Site
BenthicEnv <- merge(Y1Benthic, Y1Environment, by = c("Reef", "Site"), all = TRUE)
BenthicEnv <- BenthicEnv |>
select(-c(4:24))
View(BenthicEnv)
Heron <- BenthicEnv |>
filter(Reef == "Heron")
View(Heron)
View(Y1Benthic)
View(BenthicEnv)
RDA_Davies <- RDA_Davies |>
mutate(Reef = "Davies")
RDA_Moore <- RDA_Moore |>
mutate(Reef = "Moore")
RDA_Heron <- RDA_Heron |>
mutate(Reef = "Heron")
RDA <-rbind(RDA_Davies,RDA_Heron,RDA_Moore)
#combine RDA and BenticEnv
Y1_Benthic_Environment_ReefDev <- merge(RDA, BenthicEnv, by = c("Reef"), all = TRUE)
#combine RDA and BenticEnv
Y1_Benthic_Environment_ReefDev <- merge(RDA, BenthicEnv, by = c("Reef", "ReefDev"), all = TRUE)
View(BenthicEnv)
View(RDA)
View(BenthicEnv)
#combine RDA and BenticEnv
Y1_Benthic_Environment_ReefDev <- cbind(RDA, BenthicEnv)
View(Y1_Benthic_Environment_ReefDev)
Y1_Benthic_Environment_DevID <- Y1_Benthic_Environment_DevID |>
arrange(Reef, Site, ReefDev) |>
select(-c(label, Reef.x, Device_ID))
Y1_Benthic_Environment_ReefDev <- Y1_Benthic_Environment_ReefDev |>
arrange(Reef, Site, ReefDev) |>
select(-c(label, Reef.x, Device_ID))
Y1_Benthic_Environment_ReefDev <- Y1_Benthic_Environment_ReefDev |>
arrange(Reef, Site, ReefDev) |>
select(-c(label,Device_ID))
#add Reef names
RDA_Davies <- RDA_Davies |>
mutate(Reef = "Davies") |>
select(-label)
RDA_Moore <- RDA_Moore |>
mutate(Reef = "Moore")|>
select(-label)
RDA_Heron <- RDA_Heron |>
mutate(Reef = "Heron")|>
select(-label)
RDA <-rbind(RDA_Davies,RDA_Heron,RDA_Moore)
#add Reef names
RDA_Davies <- RDA_Davies |>
mutate(Reef1 = "Davies") |>
select(-label)
RDA_Davies <- RDA_Davies |>
mutate(Reef1 = "Davies")
RDA_Moore <- RDA_Moore |>
mutate(Reef1 = "Moore")
RDA_Heron <- RDA_Heron |>
mutate(Reef1 = "Heron")
RDA <-rbind(RDA_Davies,RDA_Heron,RDA_Moore)
#combine RDA and BenticEnv
Y1_Benthic_Environment_ReefDev <- cbind(RDA, BenthicEnv)
Y1_Benthic_Environment_ReefDev <- Y1_Benthic_Environment_ReefDev |>
arrange(Reef, Site, ReefDev) |>
select(-c(Reef1,Device_ID))
Y1_Benthic_Environment_ReefDev <- Y1_Benthic_Environment_ReefDev |>
arrange(Reef, Site, ReefDev) |>
select(-c(Reef1,Device_ID), everything())
# Check for duplicate column names in the original data frames
duplicated_colnames <- colnames(Y1_Benthic_Environment_ReefDev)[duplicated(colnames(Y1_Benthic_Environment_ReefDev))]
if (length(duplicated_colnames) > 0) {
print("Duplicate column names in Y1_Benthic_Environment_ReefDev:")
print(duplicated_colnames)
}
Y1Environment<-FinalMetrics_Summary <- read_excel("data/FinalMetrics_Summary.xlsx")
Y1Benthic <- read_excel("data/YEAR1_Benthic_data.xlsx")
RDA_Davies <- read_excel("output/Community Composition/RDA sites Davies.xlsx")
RDA_Heron <- read_excel("output/Community Composition/RDA sites Heron.xlsx")
#
RDA_Moore <- read_excel("output/Community Composition/RDA sites Moore.xlsx")
#
#Create new column with Device_ID which is just the number instead of ReefDev ("Davies_1") in Y1Benthic
Y1Benthic <- Y1Benthic |>
mutate(Device_ID = sub(".*_", "", ReefDev))
# Merge the two data frames by Site
BenthicEnv <- merge(Y1Benthic, Y1Environment, by = c("Reef", "Site"), all = TRUE)
BenthicEnv <- BenthicEnv |>
select(-c(4:24))
#add Reef names
RDA_Davies <- RDA_Davies |>
mutate(Reef1 = "Davies") |>
select(-label)
RDA_Moore <- RDA_Moore |>
mutate(Reef1 = "Moore")|>
select(-label)
RDA_Heron <- RDA_Heron |>
mutate(Reef1 = "Heron")|>
select(-label)
RDA <-rbind(RDA_Davies,RDA_Heron,RDA_Moore)
#combine RDA and BenticEnv
Y1_Benthic_Environment_ReefDev <- cbind(RDA, BenthicEnv)
Y1_Benthic_Environment_ReefDev <- Y1_Benthic_Environment_ReefDev |>
arrange(Reef, Site, ReefDev) |>
select(-c(Reef1,Device_ID), everything())
#save dataframe
library(openxlsx)
write.xlsx(Y1_Benthic_Environment_DevID, "YEAR1 Benthic Environment DeviceID.xlsx", rowName = FALSE)
write.xlsx(Y1_Benthic_Environment_ReefDev, "YEAR1 Benthic Environment ReefDev.xlsx", rowName = FALSE)
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
environment <- read_excel ("data/YEAR1 Benthic Environment ReefDev.xlsx", na="")
survival <- survival |> mutate(Reef = factor(Reef),
#  WaveEnergyLevel = factor(WaveEnergyLevel),
ReefDev = factor(ReefDev),
Census = factor(Census))
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
#Create new column with Device_ID (numeric) instead of ReefDev ("Davies_1")
survival <- survival |>
mutate(Device_ID = sub(".*_", "", ReefDev))
survival <- survival |>
survival <- survival |>
select(-c(ID, Observer, CensusT, DeploymentDate, CensusDate, Device_ID, NoRecruits))
select(-Device_ID)
survival<- survival |> select(-Device_ID)
heron <- survival |> filter (Reef == "Heron")
#heron_clean <- heron[complete.cases(heron$SurvDev),  ]
# first for A tenuis
heron_Aten <- heron |>
filter(Spp == "A_tenuis") |>
group_by(Census, ReefDev) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Aten2 <- heron_Aten |>
group_by(Census, ReefDev) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
# now for Ahyacinthus
heron_Ahya <- heron |>
filter(Spp == "A_hyacinthus") |>
group_by(Census, ReefDev) |>
mutate(SurvDev_Spp = ifelse(any(SurvTab == 1), 1, 0),
Total_Spp = n()) |>
ungroup()
heron_Ahya2 <- heron_Ahya |>
group_by(Census, ReefDev) |>
summarize(ExpDay = first(ExpDay),
Reef = first(Reef),
Site = first(Site),
WaveEnergyLevel = first(WaveEnergyLevel),
Spp = first(Spp),
Total_Spp = first(Total_Spp),
SurvDev_Spp = max(SurvDev_Spp)) |>
ungroup()
#bind them together to create one dataframe
heron_Spp <- rbind(heron_Ahya2, heron_Aten2)
heron_Spp <- heron_Spp |>
arrange(Census, Site, Spp, ReefDev)
#free up space
remove(heron_Aten, heron_Aten2, heron_Ahya, heron_Ahya2)
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron_df <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "ReefDev"), all = TRUE)
ggplot(data=heron_Spp, aes(y = SurvDev_Spp, x = WaveEnergyLevel)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = SurvDev_Spp, x = Ub_avrg)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = heron_df, x = Ub_avrg)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
heron_Spp_t2 <- heron_Spp |>
filter(Census == "t2")
heron_env <- environment |>
filter(Reef == "Heron")
heron <- merge(heron_env, heron_Spp_t2, by = c("Reef", "Site", "ReefDev"), all = TRUE)
ggplot(data=heron_Spp, aes(y = SurvDev_Spp, x = WaveEnergyLevel)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = SurvDev_Spp, x = Ub_avrg)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = SurvDev, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = SurvDev_Spp, x = Ub_avrg)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
ggplot(data=heron, aes(y = SurvDev_Spp, x = median_speed)) +
geom_point(position = position_jitter(width = 0.2, height = 0)) +
facet_wrap(~Spp) +
geom_smooth(method="lm")
View(survival)
#ACRS score summary 2024
library(tidyverse)
library(readxl)
library(dplyr)
#set working directory
setwd("C:/Users/sjurriaa/Dropbox/ACRS Student Research Awards/2024/Reviewed scores")
#load in dataframes
df_SJ<-read_excel("Applications_Scoring_SJ.xlsx")
df_BL<-read_excel("Applications_Scoring_BL.xlsx")
df_JLR<-read_excel("Applications_Scoring_JLR.xlsx")
df_SG<-read_excel("Applications_Scoring_SG.xlsx")
df_SH<-read_excel("Applications_Scoring_SH.xlsx")
df_SW<-read_excel("Applications_Scoring_SW.xlsx")
#remove extra column in df_JLR and remove excessive info
df_JLR <- df_JLR[, -21]
df_JLR <- df_JLR[,-2:-8]
df_SJ <- df_SJ[,-2:-8]
df_BL <- df_BL[,-2:-8]
df_SG <- df_SG[,-2:-8]
df_SH <- df_SH[,-2:-8]
df_SW <- df_SW[,-2:-8]
#add extra column for notes to df_SH
df_SH$Notes <- NA
#rename all notes columns to "Notes"
colnames(df_SJ)[14] <- "Notes"
colnames(df_BL)[14] <- "Notes"
colnames(df_JLR)[14] <- "Notes"
colnames(df_SG)[14] <- "Notes"
colnames(df_SH)[14] <- "Notes"
colnames(df_SW)[14] <- "Notes"
#add reviewer initials
df_SJ$Reviewer <- "SJ"
df_BL$Reviewer <- "BL"
df_JLR$Reviewer <- "JLR"
df_SG$Reviewer <- "SG"
df_SH$Reviewer <- "SH"
df_SW$Reviewer <- "SW"
#remove rows with NA for non-reviewed applications
df_SJ <- df_SJ[complete.cases(df_SJ$`Overall scientific merit`), ]
df_BL <- df_BL[complete.cases(df_BL$`Overall scientific merit`), ]
df_JLR <- df_JLR[complete.cases(df_JLR$`Overall scientific merit`), ]
df_SG <- df_SG[complete.cases(df_SG$`Overall scientific merit`), ]
df_SH <- df_SH[complete.cases(df_SH$`Overall scientific merit`), ]
df_SW <- df_SW[complete.cases(df_SW$`Overall scientific merit`), ]
#make sure that column Methodology and Merit are scored on a scale out of 10
df_SW <- df_SW |>
mutate(Methodology = `Project details: Methodology`/5*10,
Merit = `Overall scientific merit`/5*10) |>
select(-`Project details: Methodology`,
-`Overall scientific merit`)
df_SG <- df_SG |>
mutate(Methodology = `Project details: Methodology`/5*10,
Merit = `Overall scientific merit`/5*10) |>
select(-`Project details: Methodology`,
-`Overall scientific merit`)
#rename Methodology column to Methodology
names(df_SJ)[names(df_SJ) == "Project details: Methodology"] <- "Methodology"
names(df_BL)[names(df_BL) == "Project details: Methodology"] <- "Methodology"
names(df_JLR)[names(df_JLR) == "Project details: Methodology"] <- "Methodology"
names(df_SH)[names(df_SH) == "Project details: Methodology"] <- "Methodology"
#rename Overall merit column to Merit
names(df_SJ)[names(df_SJ) == "Overall scientific merit"] <- "Merit"
names(df_BL)[names(df_BL) == "Overall scientific merit"] <- "Merit"
names(df_JLR)[names(df_JLR) == "Overall scientific merit"] <- "Merit"
names(df_SH)[names(df_SH) == "Overall scientific merit"] <- "Merit"
df_SW$`Overall presentation (formatting, any figures/graphs etc)`<-as.numeric(df_SW$`Overall presentation (formatting, any figures/graphs etc)`)
#combine dataframes
df<-rbind(df_SJ,df_BL,df_JLR,df_SG,df_SH,df_SW)
#create new column for score
df <- df|>
rowwise() |>
mutate(score = sum(c_across(7:12)))
#create short summary of mean scores and sd for each applicant, ranging from high to low
scoresummary_short <- df |>
group_by(Number) |>
summarize(mScore = mean(score, na.rm = T),
sdScore = sd(score, na.rm = T),
n = n()) |>
arrange(desc(mScore))
#add mean and sd score to original dataframe
scoresummary_long <- df |>
group_by(Number) |>
summarize(mScore = mean(score, na.rm = T),
sdScore = sd(score, na.rm = T),
n = n()) |>
arrange(desc(mScore)) |>
left_join(df) |>
select(Number, mScore, sdScore, n, Reviewer, score, everything())
#assess scores by judge
df_judge <- df |>
group_by(Reviewer) |>
summarise(mScore=mean(score),
sdScore=sd(score),
n=n(),
seScore=sdScore/sqrt(n)) |>
arrange(desc(mScore))
write.csv(scoresummary_long, "2024_scores_summary_long.csv")
write.csv(scoresummary_short, "2024_scores_summary_short.csv")
write.csv(df_judge, "2024_scores_summary_judge.csv")
survival <- read_excel("data/YEAR1_Survival.xlsx", na ="")
getwd()
